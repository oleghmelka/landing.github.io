var cartoon = 0;							// проверка, которая не позволяет совершить клик на правую стрелку до того момента пока не произоёдут до конца анимация длиною в 1 секунду при клике на правую стрелку на последнем слайде;
var shift;									// разница между конечной позицией миши при маусмуве и стартовой позицией клика миши при маусдауне, в маусмуве и функцие маусапа вычисляет в какую сторону должен происходить свайп: вправо или влево;
var kliked = false;							// проверка для возможности движения свайпом: маусдаун делает тру, и разрешает маусмув и мауслив. А функция в маусапе и маусливе меняет на фолс. По єтому свайп возможен только после маусдауна;
var sdvig;									// это текущий лефт всего врапера;
var staart;									// стартовая позиция клика миши при маусдаун;
var dvij = true;							// проверка для возможности движения свайпом вправо, разрешает сделать переменную kliked на тру в маудауне и разрешает сделать маумув (нюансы для чего именно не помню);
var fist = false;							// проверка для устранения бага: блокирует маусмув при мауапе и маусливе;
var rewrite = true;							// проверка для устранения бага: при свайпе с первого слайда на последний, и наоборот, и при этом нажимания по соответствующим стрелочкам происходили непонятные движения карусели за счёт срабатывания маусмува; 
var lr = true;								// проверка для устранения бага: при быстром свайпе с первого слайда на последний и сразу же с последнего слайда на первый, сначала исчезал первый слайд, а потом появлялся; 
var arrowwave = true;						// проверка для устранения бага: после нажатия на правую стрелку на последнем слайде, и быстрого свайпа вправо уже на первом слайде срабатывал маусмув на первом слайде ко втрому слайду; 
var kurs;									// проверка для курсора: что бы "лапка" изменилась на маусдаун, то при маусовер меняем на тру;
var can = true;								// проверка для того, чтобы свайп всех слайдов можно было сделать не чаще, чем за 1 секунду;
var ayayay = true;


$(document).ready(function(){				// на готовность документа;


	SetSlider(slider_images);				// запускаем функцию SetSlider(), которая устанавливает саму карусель;


	$(".arrow_right").click(function(){		// при клике на правую стрелку;
		
		if (rewrite) {						// если переменная rewrite равна тру;
			if (cartoon === 0) {			// если переменная cartoon равна 0;
				RightSlider();				// запускаем функцию RightSlider();
			}
		}

	});
	

	$(".arrow_left").click(function(){		// при клике на левую стрелку;
		
		if (rewrite) {						// если переменная rewrite равна тру;
			if (cartoon === 0) {			// если переменная cartoon равна 0;
				LeftSlider();					// запускаем функцию LeftSlider();
			}
		}

	});


	$('.big_wrapper').mouseover(function(){					// если мышка находит на нашу карусель;
		
		$(".big_wrapper").css('cursor', '-webkit-grab');	// курсор стаёт разогнутой "лапкой";
		kurs = true;										// переменную kurs приравниваем к тру;

	});

	$(".big_wrapper").mousedown(function(e){				// если мы нажимаем на мышку, но не тянем и не отпускаем;
		
		if (ayayay) {
			if (can) {											// если переменная can равна тру;
				if (kurs === true) {							// если переменная kurs равна тру;
					$(".big_wrapper").css('cursor', '-webkit-grabbing'); // меняем курсор "лапку" на "кулак";
				}

				fist = true;									// переменную fist приравниваем к тру;
				sdvig = parseInt($(".big_wrapper").css('left')); // узнаём текущий лефт;
				
				if (dvij) {										// если переменная dvij равна тру;
					kliked = true;								// указываем в переменной что мышка "кликнута"
				}
				
				staart = e.clientX;     						// стартовая позиция клика миши;
			}
		}
	}); // КОНЕЦ МАУС-ДАВН

	
		
	$(".big_wrapper").mousemove(function(e){				// если мы двигаем мышку, но не отпускаем;
		if (fist) {
			if (kliked) {									// если произошол маусдаун и мышка сейчас зажата;
				if (lr) {									// если переменная lr равна тру;
					if (arrowwave) {						// если переменная arrowwave равна тру;
						
						var eend = e.clientX;				// в переменную записываем конечную позицию мыши;
						shift = eend - staart;				// в переменную записываем разницу между конечной позицией мыши и стартовой;
						
						$(".big_wrapper").css('transition', 'none'); // убираем анимацию за одну секунду;
						
						if (dvij) {							// если переменная dvij сейчас равна "тру";
							
							if (shift < 0) {				// если разница между конечной и стартовой позицией мишки меньше нуля, то;
			    				
			    				var flagman = parseInt($(".slider").attr("data-flag"));	// узнаём текущий "флаг"; 
								var amount = parseInt($(".slider").attr("data-clc"));	// узнаём количество слайдов;
								
								if ((flagman + 1) >= amount) {							// если текущий "флаг"+единица больше или равен количеству слайдов;
									
									var little = $('.little_wrap').eq(0).clone();		// клонируем нашу маленькую обёртку;
									$(".big_wrapper").append(little);					// вставляем склонированую маленькую обёртку в конец нашей большой обёртки;
								}
								$(".big_wrapper").css('left', sdvig+shift);				// большая обёртка едет влево на растояние текущего лефта + разницы между конечной и стартовой позицией мишки;
							
							}

							if (shift > 0) {				// если разница между конечной и стартовой позицией мишки больше нуля, то;
								
								var flagman = parseInt($(".slider").attr("data-flag")); // узнаём текущий "флаг";
								var amount = parseInt($(".slider").attr("data-clc")); 	// узнаём количество слайдов;
								
								if (flagman === 0) {									// если текущий "флаг" равен нулю;
									
									var little = $('.little_wrap').eq(0).clone();		// клонируем нашу маленькую обёртку;
									$(".big_wrapper").append(little);					// вставляем склонированую маленькую обёртку в конец нашей большой обёртки;
									$(".big_wrapper").css('transition', 'none');		// убираем анимацию за одну секунду;
									$(".big_wrapper").css('left', -100*amount+'%');		// большая обёртка едет влево на растояние количества всех слайдов;
									
									sdvig = parseInt($(".big_wrapper").css('left'));	// узнаём текущий лефт;
									$(".big_wrapper").css('left', sdvig+shift);			// большая обёртка едет влево на растояние текущего лефта + разницы между конечной и стартовой позицией мишки;
									
								}else{													// если текущий "флаг" больше или меньше нуля;
									$(".big_wrapper").css('left', sdvig+shift);			// большая обёртка едет влево на растояние текущего лефта + разницы между конечной и стартовой позицией мишки;
								}
							}
						}	
					}
				}	
			}
		}

	}); // КОНЕЦ МАУС-МУВ


	

	$(".big_wrapper").mouseup(function(){					// если мышка "отжата" на нашей карусели, то
		
		$(".big_wrapper").css('cursor', '-webkit-grab');	// курсор стаёт разогнутой "лапкой";
		fist = false;										// переменную fist приравниваем к фолс;
		upandleave();										// запускаем функцию "upandleave", которая делает то, что должно произойти;
		
	}); // КОНЕЦ МАУС-АП


	$(".big_wrapper").mouseleave(function(){				// если мышка вышла за пределы нашей карусели, то
		
		fist = false;										// переменную fist приравниваем к фолс;
		if (kliked) {										// если переменная kliked равна тру;
			upandleave();									// запускаем функцию "upandleave", которая делает то, что должно произойти;
			
		}

	}); // КОНЕЦ МАУС-ЛИВ





/*------------------ БУРГЕР МЕНЮ -----------------*/
	$('.burger').click(function(){							// при клике на значок бургера;
		$('.substrate').slideDown();						// открываем подложку;				
		$('.tres').css('opacity', '0');						// делаем третюю линию прозрачной;
		$('.uno').css('transform','rotate(45deg)');			// первую линию переворачиваем на 45 градусов;
		$('.uno').css('position','absolute');				// первой линии делаем абсолютное позиционирование;
		$('.dos').css('transform','rotate(-45deg)');		// вторую линию переворачиваем на 45 градусов;
		$('.dos').css('position','absolute');				// второй линии делаем абсолютное позиционирование;
		$('.not_line').css('display','block');				// "квадрат закрытия" делаем видимым;
		//$('.dos').css('position','absolute');
	});

	$('.substrate, .concealed_navbar a, .not_line').click(function(){	// при клике на подложку, крестик (по сути "квадрат закрытия) или пункт меню;        
		$('.substrate').slideUp();							// прячем подложку;
		$('.tres').css('opacity', '1');						// делаем третюю линию видимой;
		$('.uno').css('transform','rotate(0deg)');			// первую линию переворачиваем до 0 градусов;
		$('.uno').css('position','relative');				// первой линии делаем относительное позиционирование;
		$('.dos').css('transform','rotate(0deg)');			// вторую линию переворачиваем до 0 градусов;
		$('.dos').css('position','relative');				// второй линии делаем относительное позиционирование;
		$('.not_line').css('display','none');				// "квадрат закрытия" делаем невидимым;
	});
/*------------- ----- ----- ----- ---------------*/




/*------------------ ВАЛИДАИЯ ФОРМЫ -----------------*/
var error1 = true;
var error2 = true;
var error3 = true;

jVal = {
	'fullName' : function() {

		var nameInfo = $('#nameInfo');
		var ele = $('#fullname');
		var pos = ele.offset();
		
		if(ele.val().length < 6) {
		    error1 = true;
            nameInfo.addClass('error');
            nameInfo.css('opacity', 1);
		} else {
			error1 = false;
            nameInfo.removeClass('error');
            nameInfo.css('opacity', 0);
		}
			
    },

	'email' : function() {
	        
	        var emailInfo = $('#emailInfo');
	        var ele = $('#email');
	        var pos = ele.offset();
	        
	        var patt = /^.+@.+[.].{2,}$/i;
	        if(!patt.test(ele.val())) {
	            error2 = true;
	            emailInfo.addClass('error');
	            emailInfo.css('opacity', 1);
	        } else {
        		error2 = false;
                emailInfo.removeClass('error');
                emailInfo.css('opacity', 0);
	        }
	        
	},


    'phonenumber' : function() {
		
		var phoneInfo = $('#phoneInfo');
		var ele = $('#phoneday');
		var pos = ele.offset();
		
		var patt = /^[0-9]{10}$/i;
		if(!patt.test(ele.val())) {
		    error3 = true;
            phoneInfo.addClass('error');
            phoneInfo.css('opacity', 1);
		} else {
			error3 = false;
            phoneInfo.removeClass('error');
            phoneInfo.css('opacity', 0);
		}
		
    },

};

$('#send').click(function (e){	
		console.log(error1);
		console.log(error2);
		console.log(error3);

		if (error1 === false && error2 === false && error3 === false){		
			jVal.fullName();
    		jVal.phonenumber();
    		jVal.email();
		} else if (error1 === true && error2 === true && error3 === true){
			e.preventDefault();
			var nameInfo = $('#nameInfo');
			nameInfo.css('opacity', 1);
			nameInfo.addClass('error');
			var emailInfo = $('#emailInfo');
			emailInfo.css('opacity', 1);
			emailInfo.addClass('error');
			var phoneInfo = $('#phoneInfo');
			phoneInfo.css('opacity', 1);
			phoneInfo.addClass('error');
		} else{
			e.preventDefault();
		}
		/*if (error1 === true && error2 === true && error3 === true){		

		}*/
	
});


















$('#fullname').change(jVal.fullName);
$('#phoneday').change(jVal.phonenumber);
$('#email').change(jVal.email);


/*------------- ----- ----- ----- ---------------*/

}); // закрытие документ.реди





/*------------------ У-С-Т-А-Н-А-В-Л-И-В-А-Е-М ----- К-А-Р-У-С-Е-Л-Ь -----------------*/
function SetSlider(){								

// СОЗДАЁМ МЕНЬШУЮ ОБЁРТКУ
	$('.big_wrapper').append("<div></div>");				// вставляем в нашу большую обёртку див;
	$('.big_wrapper div').addClass("little_wrap");			// присваиваем ему клас "little_wrap";


// СОЗДАЁМ СЕГМЕНТЫ КАРУСЕЛИ
	for (var p = 0; p < slider_images.length; p++) { 		// циклом перебираем все наши картинки;
		$('.little_wrap').append("<div></div>");		 	// добавляем в нашу обёртку столько сегментов, сколько у нас картинок в переменной "slider_images";
	}
	$('.little_wrap div').addClass("slider_segment");		// только что добавленым сегментам устанавливаем клас "segment";


// УСТАНАВЛИВАЕМ КАРТИНКИ
	var blocks = $(".slider_segment"); 						// обьявляем переменную, которая содержит все елементы (масив) с класом "segment" (все только что добавленные елементы);
	for (var i = 0; i < blocks.length; i++) {    			// перебираем циклом все наши елементы с класом "segment";
		var specific = blocks.eq(i);						// создаём переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "segment";
		if ($(document).width() >= '800') {					// если ширина екрана больше или равна 800 пикселей, то:
			specific.css('background', 'url('+ slider_images[i] +') no-repeat center center'); // каждому конкретному елементу под индексом в масиве елементов с класом "segment" присваиваем фоновое изображение (широкоформатное) по индексу;
 			blocks.css('background-size', 'cover'); 		// всем елементам с класом "segment" добавляем css-свойство "размер фона такой, чтобы его ширина или высота равнялась ширине или высоте блока";
 		}else{												// если ширина екрана меньше 800 пикселей, то:
			specific.css('background', 'url('+ little_slider_images[i] +') no-repeat center center'); // каждому конкретному елементу под индексом в масиве елементов с класом "segment" присваиваем фоновое изображение (обрезаное) по индексу;
			blocks.css('background-size', 'contain'); 		// всем елементам с класом "segment" добавляем css-свойство "размер фона такой, чтобы его ширина или высота равнялась ширине или высоте блока";
		}
	}


// ЗАПИСЫВАЕМ НУЖНЫЕ ЗНАЧЕНИЯ В ПЕРЕМЕННЫЕ
	var segment = $(".slider").width();      				// обьявляем переменную "segment", которая равна текущей зоне видимости;
	var klk = $(".slider_segment").length;            		// обьявляем переменную "klk", которая равна количеству сегментов в обёртке;
	var wrap = (segment)*klk;                 				// обьявляем переменную "wrap", которая равна ширине всей обёртки (она в свою очередь равна ширине одного сегмента умноженого на количество всех сегментов);



// ЗАДАЁМ ЗНАЧЕНИЯ
	$(".slider_segment").width(segment);					// присваиваем сегменту ширину, равную текущей зоне видимости ;

	if ($(document).width() >= '800') {						// если ширина екрана больше или равна 800 пикселей, то:
		$(".slider_segment").css('padding-bottom', segment/4);	// присваиваем сегменту 'padding-bottom', равнуый текущей зоне видимости поделённой на 4;
	}else{
		$(".slider_segment").css('padding-bottom', segment/2);	// присваиваем сегменту 'padding-bottom', равнуый текущей зоне видимости поделённой на 2;
	}

	$(".little_wrap").width(wrap);							// присваиваем обёртке ширину, равную ширине одного сегмента умноженого на количество всех сегментов;


// УСТАНАВЛИВАЕМ ДАТА-АТРИБУТЫ
	$(".slider").attr("data-flag", 0);						// записываем нашей карусели дата-атрибут "flag", который равен 0;
	$(".slider").attr("data-clc", klk);						// записываем нашей карусели дата-атрибут "clc", который равен количеству сегментов в обёртке;


// ДОБАВЛЯЕМ КРУЖКИ (добавляем в нашу обёртку столько красных кружочков, сколько у нас картинок в переменной "slider_images");
	for (var p = 0; p < slider_images.length; p++) {  		// циклом перебираем все наши картинки;
		$('.slider_points').append("<div></div>");	  		// добавляем квадратные "дивы-обёртки"" красных кружочков;
	}
	$('.slider_points div').addClass("circle");       		// добавляем к ним клас "circle";
	$('.circle').append("<div></div>");			      		// в них вставляем ещё 1 див (сами кружочки);
	$('.circle div').addClass("sphere"); 		      		// им добавляем клас "sphere";


// ДЕЛАЕМ ОПРЕДЕЛЁННЫЙ КРУЖОК АКТИВНЫМ
	var redcircle = $(".sphere").eq(0);		  				// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";				    
	redcircle.addClass("active_sphere");	            	// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";
	

// ДОБАВЛЯЕМ КРУЖКАМ ДАТА-АТРИБУТ, УКАЗЫВАЮЩИЙ ИХНИЙ ПОРЯДКОВЫЙ НОМЕР
	var pequeno = $(".sphere");          					// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere";
	
	for (var r = 0; r < pequeno.length; r++) {				// перебираем циклом этот масив;
		pequeno.eq(r).attr('data-numero', r)				// каждому из этих елементов присваиваем дата-атрибут "numero" со значением индекса елемента;
	}
	$(".sphere").on("click", function(){      				// При клике на кружок;
    	ball($(this));										// запускаем функцию ball, передавая туда тот кружок по которому мы клацнули;
	});	

}




// КЛИК НА ПРАВУЮ СТРЕЛКУ
function RightSlider(){
		
		var flagman = parseInt($(".slider").attr("data-flag"));	// узнаём текущий "флаг";
		var amount = parseInt($(".slider").attr("data-clc")); // узнаём количество слайдов;

		if ((flagman + 1) < amount) {						// если текущий "флаг" плюс единица меньше количества всех слайдов, то:
			
			$(".big_wrapper").css('transition', 'left 1s'); // убираем анимацию за 1 секунду;
			$(".slider").attr("data-flag", flagman+1);		// увеличиваем дата-атрибут "флаг" на единицу;
			$(".big_wrapper").css('left', -100*$(".slider").attr("data-flag")+'%'); // обёртку сдвигаем влево на растояние равное ширине одного сегмента умноженого на дата-атрибут "flag";

			var redpoints = $(".sphere");					// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
			var redcircle = redpoints.eq(flagman+1);		// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";		    
			redpoints.removeClass("active_sphere");			// удаляем активный клас у всех кружков;
			redcircle.addClass("active_sphere");			// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";

		} else{												// если текущий "флаг" плюс единица больше количества всех слайдов, то:
			
			ayayay = false;									// переменную ayayay приравниваем к false;
			cartoon = 1;									// переменную cartoon приравниваем к единице;
			arrowwave = false;								// переменную arrowwave приравниваем к false;
			var little = $('.little_wrap').eq(0).clone();	// клонируем маленькую обёртку;
			$(".big_wrapper").append(little);				// вставляем склонированную маленькую обёртку в конец большой обёртки;
			$(".big_wrapper").css('left', -100*amount+'%'); // большую обёртку смещаем влево на растояние количества елементов в карусели;

				setTimeout( function(){						// с задержкой в одну секунду делаем:
					
					$(".slider").attr("data-flag", 0);		// обнуляем дата-атрибут флаг;
					$(".big_wrapper").css('transition', 'none'); // убираем анимацию за 1 секунду;
					$(".big_wrapper").css('left', 0);		// большую обёртку смещаем влево на начало отсчёта координат (в ноль)
					$('.little_wrap:last').remove();		// удаляем последнюю, только что склонированную и добавленную, маленькую обёртку;
					cartoon = 0;							// переменную cartoon приравниваем к нулю;
					arrowwave = true;						// переменную arrowwave приравниваем к true;
					ayayay = true;							// переменную ayayay приравниваем к true;

				}, 1000);

			var redcircle = $(".sphere").eq(0);		  		// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";				    
			var redpoints = $(".sphere");					// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
			redpoints.removeClass("active_sphere");			// удаляем активный клас у всех кружков;
			redcircle.addClass("active_sphere");	        // конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";

		}
		
} // конец функции RightSlider;
	




// КЛИК НА ЛЕВУЮ СТРЕЛКУ
function LeftSlider(){
	
	var flagman = parseInt($(".slider").attr("data-flag")); // узнаём текущий "флаг";
	var amount = parseInt($(".slider").attr("data-clc"));	// узнаём количество слайдов;
	var zero = 0;											// переменную zero приравниваем к нулю; 

	if (flagman > 0) {										// если текущий "флаг" больше нуля;
		
		$(".slider").attr("data-flag", flagman-1);			// уменьшаем дата-атрибут "флаг" на единицу;
		$(".big_wrapper").css('left', -100*$(".slider").attr("data-flag")+'%'); // обёртку сдвигаем влево на растояние равное ширине одного сегмента умноженого на дата-атрибут "flag";

		var redpoints = $(".sphere");						// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
		var redcircle = redpoints.eq(flagman-1);		  	// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";		    
		redpoints.removeClass("active_sphere");				// удаляем активный клас у всех кружков;
		redcircle.addClass("active_sphere");				// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";

	} else{													// если текущий "флаг" меньше или равен нулю;
		
		cartoon = 1;
		var little = $('.little_wrap').eq(0).clone();		// клонируем маленькую обёртку;
		$(".big_wrapper").append(little);					// вставляем склонированную маленькую обёртку в конец большой обёртки;
		$(".big_wrapper").css('transition', 'none');		// убираем анимацию за 1 секунду;
		$(".big_wrapper").css('left', -100*amount+'%');		// большую обёртку смещаем влево на растояние количества елементов в карусели;
			
			setTimeout( function(){							// с задержкой в ноль секунд делаем:
				
				$(".big_wrapper").css('transition', 'left 1s'); // возвращаем анимацию за 1 секунду;
				$(".big_wrapper").css('left', -100*(amount-1)+'%'); // большую обёртку смещаем влево на растояние количества елементов в карусели минус единица;
				$(".slider").attr("data-flag", amount-1);	// устанавливаем, что текущий дата-атрибут "флаг" равен количеству елементов в карусели минус единица;
				
			}, 0);

		var redcircle = $(".sphere").eq(amount-1);			// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение количества слайдов в карусели минус единица;		  			
		var redpoints = $(".sphere");						// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
		redpoints.removeClass("active_sphere");     		// удаляем активный клас у всех кружков;
		redcircle.addClass("active_sphere");				// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";

			setTimeout( function(){							// с задержкой в одну секунду делаем:
				
				$('.little_wrap:last').remove();			// удаляем последнюю, только что склонированную и добавленную, маленькую обёртку;
				cartoon = 0;

			}, 1000);

	}

}





// ОТПУСКАНИЕ МЫШИ НА КАРУСЕЛИ ИЛИ ВЫХОД МЫШИ ЗА ПРЕДЕЛЫ КАРУСЕЛИ ПОСЛУ МАУСДАУНА И МАУСМУВА
function upandleave(){   

	kliked = false;											// переменной kliked присваиваем значение false;
 
 // -В-П-Р-А-В-О- //

		    if (shift < 0) {								// если разница между конечной позицией мыши и стартовой меньше нуля;
		    	
		    	if (cartoon === 0) {						// если переменная cartoon равна нулю;
		    		

						var flagman = parseInt($(".slider").attr("data-flag"));	// узнаём текущий "флаг";
						var amount = parseInt($(".slider").attr("data-clc"));	// узнаём количество слайдов;

						if ((flagman + 1) < amount) {		// если текущий "флаг" + единица меньше количества всех слайдов;
							
							cartoon = 1;
							can = false;
							$(".big_wrapper").css('transition', 'left 1s');	// убираем анимацию за 1 секунду;
							$(".slider").attr("data-flag", flagman+1);	// увеличиваем дата-атрибут "flag" на единицу;
							$(".big_wrapper").css('left', -100*$(".slider").attr("data-flag")+'%'); // обёртку сдвигаем влево на растояние равное ширине одного сегмента умноженого на дата-атрибут "flag";
							
							var redpoints = $(".sphere");   		 // обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
							var redcircle = redpoints.eq(flagman+1); // обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";		    
							redpoints.removeClass("active_sphere");	 // удаляем активный клас у всех кружков;
							redcircle.addClass("active_sphere");	 // конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";

							setTimeout( function(){			// с задержкой в одну секунду;
								can = true;					// разрешаем свайп слайдера;							
								cartoon = 0;
							}, 1000);
						
						} else{								// если текущий "флаг" + единица больше или равен количеству всех слайдов;
							
								cartoon = 1;				// переменную cartoon приравниваем к единице;
								dvij = false;				// переменной dvij присваиваем значение false;
								rewrite = false;			// переменной rewrite присваиваем значение false;
								lr = false;					// переменной lr присваиваем значение false;
								
								$(".big_wrapper").css('transition', 'left 1s'); // возвращаем анимацию за 1 секунду;
								$(".big_wrapper").css('left', -100*amount+'%'); // большую обёртку смещаем влево на растояние количества елементов в карусели;

									setTimeout( function(){	// с задержкой в одну секунду;
										
										$(".slider").attr("data-flag", 0);	            // обнуляем дата-атрибут "flag";
										$(".big_wrapper").css('transition', 'none');    // убираем анимацию за 1 секунду; 
										$(".big_wrapper").css('left', 0);				// большую обёртку сдвигаем к началу координат (в ноль);
										$('.big_wrapper').children().slice(1).remove();	// удаляем все маленькие обёртки, кроме первой, которые были добавлены после клонирования на маусмуве;
										
										cartoon = 0;		// переменную cartoon приравниваем к нулю;
										dvij = true;        // переменной dvij присваиваем значение true;
										rewrite = true;		// переменной rewrite присваиваем значение true;
										lr = true;			// переменной lr присваиваем значение true;
									
									}, 1000);

								var redcircle = $(".sphere").eq(0);		// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";				    
								var redpoints = $(".sphere");			// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
								redpoints.removeClass("active_sphere");	// удаляем активный клас у всех кружков;
								redcircle.addClass("active_sphere");	// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere"
								
							}
						shift = 0;							// переменную shift (разницу между конечной  и стартовой позицией мыши при маусмуве) приравниваем к нулю;
					}
			} 


 // -В-Л-Е-В-О- //

			if (shift > 0) {								// если разницу между конечной  и стартовой позицией мыши при маусмуве больше нуля;
				
				if (cartoon === 0) {						// если переменная cartoon равна нулю

					var flagman = parseInt($(".slider").attr("data-flag"));	// узнаём текущий "флаг";
					var amount = parseInt($(".slider").attr("data-clc"));	// узнаём количество слайдов;
					var zero = 0;											// обьявляем перменную zero и присваиваем ей значение ноль;


					if (flagman > 0) {						// если текущий "флаг" больше нуля, то:
						
						cartoon = 1;
						can = false;
						$(".big_wrapper").css('transition', 'left 1s');							// возвращаем анимацию за 1 секунду;
						$(".slider").attr("data-flag", flagman-1);								// уменьшаем на единицу значение дата-атрибута "флаг";
						$(".big_wrapper").css('left', -100*$(".slider").attr("data-flag")+'%');	// большую обёртку сдвигаем влево на растояние равное ширине одного сегмента умноженого на дата-атрибут "flag";
					
						var redpoints = $(".sphere");				// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
						var redcircle = redpoints.eq(flagman-1);	// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";		    
						redpoints.removeClass("active_sphere");		// удаляем активный клас у всех кружков;
						redcircle.addClass("active_sphere");		// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";
					
						setTimeout( function(){				// с задержкой в одну секунду;
							can = true;						// разрешаем свайп слайдера;							
							cartoon = 0;
						}, 1000);

					} else{									// если текущий "флаг" меньше нуля, то:
						
							rewrite = false;				// переменной rewrite присваиваем значение false;
							lr = false;						// переменной lr присваиваем значение false;
							
							$(".big_wrapper").css('transition', 'left 1s');		// возвращаем анимацию за 1 секунду;
							$(".big_wrapper").css('left', -100*(amount-1)+'%');	// большую обёртку смещаем влево на растояние количества елементов в карусели минус единица;
							$(".slider").attr("data-flag", amount-1);			// устанавливаем, что текущий дата-атрибут "флаг" равен количеству елементов в карусели минус единица;
							
							setTimeout( function(){			// с задержкой в одну секунду, делаем:
								
								$('.big_wrapper').children().slice(1).remove();	// удаляем все маленькие обёртки, кроме первой, созданые в маусмув;
								rewrite = true;				// переменной rewrite присваиваем значение true;
								lr = true;					// переменной lr присваиваем значение true;
							
							}, 1000);
									
							var redcircle = $(".sphere").eq(amount-1);  // обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение количества слайдов в карусели минус единица;  			
							var redpoints = $(".sphere");				// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
							redpoints.removeClass("active_sphere");		// удаляем активный клас у всех кружков;
							redcircle.addClass("active_sphere");		// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";
					
					}
					
					shift = 0;								// перменной zero задаём значение ноль;
				
				}
			}
		
		$(".big_wrapper").attr("data-diff", 0);				// обнуляем дата-атрибут "diff";
		$(".big_wrapper").attr("data-start", 0);			// обнуляем дата-атрибут "start";

}


// ИЗМЕНЕНИЕ ИЗОБРАЖЕНИЯ КАРУСЕЛИ ПРИ КЛИКЕ НА КРАСНЫЙ КРУЖОК
function ball(nuestro){      
	$(".big_wrapper").css('transition', 'left 1s');			// востанавливаем смещение за 1 секунду;
	$(".big_wrapper").css('left',-100*nuestro.data('numero')+'%'); 	// сдвигаем обёртку карусели влево на растояние равное одному блоку умноженому на порядковый номер кружка (дата-атрибут 'numero');
	$(".slider").attr("data-flag", nuestro.data('numero'));	// меняем значение дата-атрибута "flag" карусели, задав ему значение дата-атрибута 'numero';
								
	var redpoints = $(".sphere");							// обьявляем переменную, которая содержит все елементы (масив) с класом "sphere" (сами кружки);
	var redcircle = redpoints.eq(nuestro.data('numero'));	// обьявляем переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "sphere" (сами кружки), при этом индексом выступает значение нашего дата атрибута "flag";		    
	redpoints.removeClass("active_sphere");					// удаляем активный клас у всех кружков;
	redcircle.addClass("active_sphere");					// конкретному елементу под индексом в масиве елементов с класом "sphere" (сами кружки) добавляем клас "active_sphere";
															 
}


$(window).resize(function() {
	
// ЗАПИСЫВАЕМ НУЖНЫЕ ЗНАЧЕНИЯ В ПЕРЕМЕННЫЕ
	var segment = $(".slider").width();      				// обьявляем переменную "segment", которая равна текущей зоне видимости;
	var klk = $(".slider_segment").length;            		// обьявляем переменную "klk", которая равна количеству сегментов в обёртке;
	var wrap = (segment)*klk;                 				// обьявляем переменную "wrap", которая равна ширине всей обёртки (она в свою очередь равна ширине одного сегмента умноженого на количество всех сегментов);
	

// УСТАНАВЛИВАЕМ КАРТИНКИ
	var blocks = $(".slider_segment"); 						// обьявляем переменную, которая содержит все елементы (масив) с класом "segment" (все только что добавленные елементы);
	for (var i = 0; i < blocks.length; i++) {    			// перебираем циклом все наши елементы с класом "segment";
		var specific = blocks.eq(i);						// создаём переменную, которая содержит конкретный елемент под индексом в масиве елементов с класом "segment";
		if ($(document).width() >= '800') {					// если ширина екрана больше или равна 800 пикселей, то:
			specific.css('background', 'url('+ slider_images[i] +') no-repeat center center'); // каждому конкретному елементу под индексом в масиве елементов с класом "segment" присваиваем фоновое изображение (широкоформатное) по индексу;
 			blocks.css('background-size', 'cover'); 		// всем елементам с класом "segment" добавляем css-свойство "размер фона такой, чтобы его ширина или высота равнялась ширине или высоте блока";
 		}else{												// если ширина екрана меньше 800 пикселей, то:
			specific.css('background', 'url('+ little_slider_images[i] +') no-repeat center center'); // каждому конкретному елементу под индексом в масиве елементов с класом "segment" присваиваем фоновое изображение (обрезаное) по индексу;
			blocks.css('background-size', 'contain'); 		// всем елементам с класом "segment" добавляем css-свойство "размер фона такой, чтобы его ширина или высота равнялась ширине или высоте блока";
		}
	}

// ЗАДАЁМ ЗНАЧЕНИЯ
	$(".slider_segment").width(segment);					// присваиваем сегменту ширину, равную текущей зоне видимости ;
	if ($(document).width() >= '800') {						// если ширина екрана больше или равна 800 пикселей, то:
		$(".slider_segment").css('padding-bottom', segment/4); // присваиваем сегменту 'padding-bottom', равнуый текущей зоне видимости поделённой на 4;
	}else{													// если ширина екрана меньшще 800 пикселей, то:
		$(".slider_segment").css('padding-bottom', segment/2); // присваиваем сегменту 'padding-bottom', равнуый текущей зоне видимости поделённой на 2;
	}
	$(".little_wrap").width(wrap);							// присваиваем обёртке ширину, равную ширине одного сегмента умноженого на количество всех сегментов;



});	







// СКРОЛ

( function() {

    var links = document.querySelectorAll( '.navbar a, .concealed_navbar a' ),p,h,time,
        fps =  60, duration = 1, distance, inc, cur;

    for( var i = 0; i < links.length; i++ ) {

        links[i].onclick = function(e) {

            e.preventDefault();
            p = document.documentElement.scrollTop;
            var href = this.href.split('#')[1];
            h = document.getElementById( href ).getBoundingClientRect().top + document.documentElement.scrollTop;
            distance = h - p;
            inc = distance/(duration*fps);
            cur = p;
            time = 0;
            timer = setInterval( smoothScroll, 1000/fps );

        }

    }

    function smoothScroll() {
        time += 1/fps;
        cur = easeInOutQuad(time*100/duration, time, p, h, duration);
        if( cur>=h ) {
            clearInterval(timer);
            window.scrollTo(0,h);
            return;
        }
        window.scrollTo(0, cur);
    };

    // t - текущее время
    // b - начальное значение
    // с - макс
    // d - длительность
    function easeInOutQuad(x, t, b, c, d) {
        if ((t /= d / 2) < 1) {
            return c / 2 * t * t + b;
        } else {
            return -c / 2 * ((--t) * (t - 2) - 1) + b;
        }
    }
    

} )();



